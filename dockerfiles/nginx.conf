events {
    worker_connections 1024;
}

http {
    # Define upstream servers (uwsgi workers)
    upstream sandbox_workers {
        # Use consistent hashing based on session_id for session affinity
        # This ensures the same session_id always hits the same worker
        hash $session_id consistent;

        # Add your worker servers here
        server 127.0.0.1:6001 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:6002 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:6003 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:6004 max_fails=3 fail_timeout=30s;

        # Health checks
        keepalive 32;
    }

    # Extract session_id from JSON payload for hash routing
    map $request_body $session_id {
        default "";
        "~*\"session_id\":\s*\"([^\"]+)\"" $1;
    }

    # Fallback: use client IP if no session_id (for non-session requests)
    map $session_id $routing_key {
        "" $remote_addr;
        default $session_id;
    }

    server {
        listen 6000;
        server_name localhost;

        # Increase body size for large code payloads
        client_max_body_size 10M;

        # Buffer the request body so we can read session_id
        client_body_buffer_size 128k;

        # Main execution endpoint with session affinity
        location /execute {
            # Hash based on session_id for consistent routing
            proxy_pass http://sandbox_workers;

            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Increase timeouts for long-running code execution
            proxy_connect_timeout 10s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;

            # Don't buffer response for streaming
            proxy_buffering off;
        }

        # Session management endpoints - also use session affinity
        location ~ ^/sessions/(.+)$ {
            set $session_id_path $1;

            # Route to same worker that has this session
            proxy_pass http://sandbox_workers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # List all sessions - needs to aggregate from all workers
        location = /sessions {
            # For listing sessions, we need to query all workers
            # This is more complex and might need a custom endpoint
            proxy_pass http://sandbox_workers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Health check endpoint - can hit any worker
        location /health {
            proxy_pass http://sandbox_workers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Worker status endpoint for debugging
        location /nginx-status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
    }

    # Logging
    access_log /var/log/nginx/sandbox_access.log;
    error_log /var/log/nginx/sandbox_error.log;
}
